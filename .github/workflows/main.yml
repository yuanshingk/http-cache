name: Publish and Deploy
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:
jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - 
        name: Checkout master branch
        uses: actions/checkout@v2
      -
        name: Read timestamp
        id: timestamp
        run: echo "::set-output name=timestamp::$(date +'%s')"
      -
        name: Create timestamp tag file
        shell: bash
        run: |
          echo ${{ steps.timestamp.outputs.timestamp }} > tag.txt
      -
        name: Upload timestamp tag file
        uses: actions/upload-artifact@v2
        with:
          name: timestampTag
          path: tag.txt
      - 
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: cruellays/http-cache:${{ steps.timestamp.outputs.timestamp }}
          build-args: |
            PORT=8080
            BASEURL=https://http-cache.azurewebsites.net
      -
        name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
  security:
    needs: publish
    runs-on: ubuntu-latest
    steps:
      -
        name: Download timestamp tag file
        uses: actions/download-artifact@v2
        with:
          name: timestampTag
      -
        name: Read timestamp
        id: timestamp
        shell: bash
        run: |
          value=`cat tag.txt`
          echo "::set-output name=timestamp::$value"
      -
        name: Run Snyk scan on Docker image
        uses: snyk/actions/docker@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          image: cruellays/http-cache:${{ steps.timestamp.outputs.timestamp }}
          args: --file=Dockerfile
      -
        name: Upload scan result to GitHub
        uses: github/codeql-action/upload-sarif@v1
        with:
          sarif_file: snyk.sarif
  deploy:
    needs: publish
    runs-on: ubuntu-latest
    steps:
      -
        name: Download timestamp tag file
        uses: actions/download-artifact@v2
        with:
          name: timestampTag
      -
        name: Read timestamp
        id: timestamp
        shell: bash
        run: |
          value=`cat tag.txt`
          echo "::set-output name=timestamp::$value"
      - 
        name: Deploy to Azure Webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: http-cache
          publish-profile: ${{ secrets.HTTPCACHE_PUBLISH_PROFILE }}
          images: cruellays/http-cache:${{ steps.timestamp.outputs.timestamp }}
